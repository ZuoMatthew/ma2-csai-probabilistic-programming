>>> print(BayesToCNF.toEnc1(BayesToCNF.loadModel("files/abc.dsc")))
{'a1': '0.1', 'a2': '0.9'}
{'a1': {'b2': '0.9', 'b1': '0.1'}, 'a2': {'b2': '0.8', 'b1': '0.2'}}
{'a1': {'c3': '0.7', 'c1': '0.1', 'c2': '0.2'}, 'a2': {'c3': '0.9', 'c1': '0.01', 'c2': '0.09'}}
Indicator clauses:
~\lambda_C_c1 v ~\lambda_C_c2
~\lambda_C_c1 v ~\lambda_C_c3
~\lambda_C_c2 v ~\lambda_C_c3
\lambda_C_c1 v \lambda_C_c2 v \lambda_C_c3
~\lambda_A_a1 v ~\lambda_A_a2
\lambda_A_a1 v \lambda_A_a2
~\lambda_B_b1 v ~\lambda_B_b2
\lambda_B_b1 v \lambda_B_b2
Parameter clauses:
\lambda_A_a1 ∧ \lambda_C_c1 <=> \theta_C_c1|A_a1
\lambda_A_a1 ∧ \lambda_C_c2 <=> \theta_C_c2|A_a1
\lambda_A_a1 ∧ \lambda_C_c3 <=> \theta_C_c3|A_a1
\lambda_A_a2 ∧ \lambda_C_c1 <=> \theta_C_c1|A_a2
\lambda_A_a2 ∧ \lambda_C_c2 <=> \theta_C_c2|A_a2
\lambda_A_a2 ∧ \lambda_C_c3 <=> \theta_C_c3|A_a2
\lambda_A_a1 <=> \theta_A_a1
\lambda_A_a2 <=> \theta_A_a2
\lambda_A_a1 ∧ \lambda_B_b1 <=> \theta_B_b1|A_a1
\lambda_A_a1 ∧ \lambda_B_b2 <=> \theta_B_b2|A_a1
\lambda_A_a2 ∧ \lambda_B_b1 <=> \theta_B_b1|A_a2
\lambda_A_a2 ∧ \lambda_B_b2 <=> \theta_B_b2|A_a2
Weights:
W(\lambda_C_c1) = 1
W(~\lambda_C_c1) = 1
W(\lambda_C_c2) = 1
W(~\lambda_C_c2) = 1
W(\lambda_C_c3) = 1
W(~\lambda_C_c3) = 1
W(\lambda_A_a1) = 1
W(~\lambda_A_a1) = 1
W(\lambda_A_a2) = 1
W(~\lambda_A_a2) = 1
W(\lambda_B_b1) = 1
W(~\lambda_B_b1) = 1
W(\lambda_B_b2) = 1
W(~\lambda_B_b2) = 1
W(\theta_C_c1|A_a1) = 0.1
W(~\theta_C_c1|A_a1) = 0.1
W(\theta_C_c2|A_a1) = 0.2
W(~\theta_C_c2|A_a1) = 0.2
W(\theta_C_c3|A_a1) = 0.7
W(~\theta_C_c3|A_a1) = 0.7
W(\theta_C_c1|A_a2) = 0.01
W(~\theta_C_c1|A_a2) = 0.01
W(\theta_C_c2|A_a2) = 0.09
W(~\theta_C_c2|A_a2) = 0.09
W(\theta_C_c3|A_a2) = 0.9
W(~\theta_C_c3|A_a2) = 0.9
W(\theta_A_a1) = 0.1
W(~\theta_A_a1) = 0.1
W(\theta_A_a2) = 0.9
W(~\theta_A_a2) = 0.9
W(\theta_B_b1|A_a1) = 0.1
W(~\theta_B_b1|A_a1) = 0.1
W(\theta_B_b2|A_a1) = 0.9
W(~\theta_B_b2|A_a1) = 0.9
W(\theta_B_b1|A_a2) = 0.2
W(~\theta_B_b1|A_a2) = 0.2
W(\theta_B_b2|A_a2) = 0.8
W(~\theta_B_b2|A_a2) = 0.8
>>> print(BayesToCNF.toEnc1(BayesToCNF.loadModel("files/abc.dsc")).toDimac())
{'a1': '0.1', 'a2': '0.9'}
{'a1': {'b2': '0.9', 'b1': '0.1'}, 'a2': {'b2': '0.8', 'b1': '0.2'}}
{'a1': {'c3': '0.7', 'c1': '0.1', 'c2': '0.2'}, 'a2': {'c3': '0.9', 'c1': '0.01', 'c2': '0.09'}}
c
c Auto generated by script
c
c weights 1 1 0.9 0.9 1 1 0.2 0.2 0.7 0.7 0.9 0.9 0.8 0.8 0.1 0.1 0.01 0.01 1 1 0.09 0.09 0.9 0.9 1 1 0.1 0.1 0.1 0.1 1 1 1 1 1 1 0.2 0.2
p cnf 19 20
-1 -2 0
-1 -3 0
-2 -3 0
1 2 3 0
-4 -5 0
4 5 0
-6 -7 0
6 7 0
-4 -1 8 0
-4 -2 9 0
-4 -3 10 0
-5 -1 11 0
-5 -2 12 0
-5 -3 13 0
-4 14 0
-5 15 0
-4 -6 16 0
-4 -7 17 0
-5 -6 18 0
-5 -7 19 0

